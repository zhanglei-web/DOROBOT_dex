# 使用 Ubuntu 22.04 作为基础镜像
FROM ubuntu:22.04

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV CONDA_DIR=/opt/miniconda3
ENV PATH=${CONDA_DIR}/bin:${PATH}

# 安装系统依赖
RUN apt-get update && \
    apt-get install -y \
        wget \
        bzip2 \
        git \
        curl \
        python3-pip \
        build-essential && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 安装 Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p $CONDA_DIR && \
    rm /tmp/miniconda.sh

# 初始化 Conda 并配置环境
RUN $CONDA_DIR/bin/conda init bash && \
    echo "source $CONDA_DIR/etc/profile.d/conda.sh" >> ~/.bashrc

# 设置 SHELL 以便使用 bash
SHELL ["/bin/bash", "-c"]

# 创建 Conda 环境（使用绝对路径）
RUN conda create -n op python=3.11 -y

# 安装 uv 到 Conda 环境
# RUN conda run -n op pip install uv
RUN conda run -n op pip install uv -i https://pypi.tuna.tsinghua.edu.cn/simple 
# RUN curl -Ls https://github.com/astral-sh/uv/releases/latest/download/uv-linux-x86_64-gnu > /opt/miniconda3/envs/op/bin/uv && \
#     chmod +x /opt/miniconda3/envs/op/bin/uv

# # 克隆项目仓库
# RUN git clone https://github.com/DoRobot-Project/Operating-Platform.git  /Operating-Platform

WORKDIR /Operating-Platform
COPY . .

# 安装项目依赖
RUN conda run -n op uv sync --index-url https://pypi.tuna.tsinghua.edu.cn/simple 

# 安装 PyTorch（CPU 版本示例）
RUN conda run -n op pip install torch==2.6.0 -i https://pypi.tuna.tsinghua.edu.cn/simple \
 --extra-index-url https://download.pytorch.org/whl/cpu 

# 设置默认启动命令
CMD ["/bin/bash", "-c", "conda init && conda activate op"]

# # 设置默认入口
# ENTRYPOINT ["/entrypoint.sh"]